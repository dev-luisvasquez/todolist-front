/**
 * Generated by orval v7.11.2 游꽄
 * Do not edit manually.
 * TodoList API
 * API para gesti칩n de tareas y usuarios
 * OpenAPI spec version: 1.0
 */
import type {
  AuthControllerChangePasswordBody,
  AuthControllerRecoverPasswordBody,
  AuthControllerRequestPasswordRecoveryBody,
  AuthDto,
  CreateUserDto,
  LoginResponseDto,
} from ".././models";

import { customInstance } from "../../mutator/custom-instance";

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

export const getAuth = () => {
  /**
   * Crea una nueva cuenta de usuario en el sistema
   * @summary Registrar nuevo usuario
   */
  const authControllerSignUp = (
    createUserDto: CreateUserDto,
    options?: SecondParameter<typeof customInstance>,
  ) => {
    return customInstance<LoginResponseDto>(
      {
        url: `/auth/signup`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: createUserDto,
      },
      options,
    );
  };
  /**
   * Autentica un usuario con email y contrase침a
   * @summary Iniciar sesi칩n
   */
  const authControllerSignIn = (
    authDto: AuthDto,
    options?: SecondParameter<typeof customInstance>,
  ) => {
    return customInstance<LoginResponseDto>(
      {
        url: `/auth/signin`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: authDto,
      },
      options,
    );
  };
  /**
   * Genera un nuevo token de acceso usando el refresh token
   * @summary Renovar token de acceso
   */
  const authControllerRefreshToken = (
    options?: SecondParameter<typeof customInstance>,
  ) => {
    return customInstance<LoginResponseDto>(
      { url: `/auth/refresh-token`, method: "POST" },
      options,
    );
  };
  /**
   * Establece una nueva contrase침a usando el token de recuperaci칩n
   * @summary Recuperar contrase침a
   */
  const authControllerRecoverPassword = (
    authControllerRecoverPasswordBody: AuthControllerRecoverPasswordBody,
    options?: SecondParameter<typeof customInstance>,
  ) => {
    return customInstance<null>(
      {
        url: `/auth/recover-password`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: authControllerRecoverPasswordBody,
      },
      options,
    );
  };
  /**
   * Env칤a un email con el token para recuperar la contrase침a
   * @summary Solicitar recuperaci칩n de contrase침a
   */
  const authControllerRequestPasswordRecovery = (
    authControllerRequestPasswordRecoveryBody: AuthControllerRequestPasswordRecoveryBody,
    options?: SecondParameter<typeof customInstance>,
  ) => {
    return customInstance<null>(
      {
        url: `/auth/request-password-recovery`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: authControllerRequestPasswordRecoveryBody,
      },
      options,
    );
  };
  /**
   * Cambia la contrase침a del usuario autenticado
   * @summary Cambiar contrase침a
   */
  const authControllerChangePassword = (
    authControllerChangePasswordBody: AuthControllerChangePasswordBody,
    options?: SecondParameter<typeof customInstance>,
  ) => {
    return customInstance<null>(
      {
        url: `/auth/change-password`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: authControllerChangePasswordBody,
      },
      options,
    );
  };
  return {
    authControllerSignUp,
    authControllerSignIn,
    authControllerRefreshToken,
    authControllerRecoverPassword,
    authControllerRequestPasswordRecovery,
    authControllerChangePassword,
  };
};
export type AuthControllerSignUpResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getAuth>["authControllerSignUp"]>>
>;
export type AuthControllerSignInResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getAuth>["authControllerSignIn"]>>
>;
export type AuthControllerRefreshTokenResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getAuth>["authControllerRefreshToken"]>>
>;
export type AuthControllerRecoverPasswordResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getAuth>["authControllerRecoverPassword"]>
  >
>;
export type AuthControllerRequestPasswordRecoveryResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getAuth>["authControllerRequestPasswordRecovery"]
    >
  >
>;
export type AuthControllerChangePasswordResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getAuth>["authControllerChangePassword"]>
  >
>;
